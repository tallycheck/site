<?xml version="1.0" encoding="UTF-8"?>
<project name="admin-site" default="build-app" basedir="."
         xmlns:artifact="antlib:org.apache.maven.artifact.ant"
        >

    <!-- import the ant / maven integration tasks -->
    <path id="maven-ant-tasks.classpath" path="../lib/maven-ant-tasks-2.1.3.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="antlib:org.apache.maven.artifact.ant"
             classpathref="maven-ant-tasks.classpath" />

    <!--     <property name="project.root" location="../../"/>  -->
    <property name="project.root" location="../"/>
    <property name="project.name" value="admin-site" />

    <!-- See the following URL for a description of this property file strategy -->
    <!-- The only difference is we prepend a . for the home directory property files -->
    <!-- http://www.javaranch.com/ant/properties.jsp -->
    <property file="${user.home}/.${project.name}.properties"/>
    <property file="${user.home}/.build.properties"/>
    <property name="config.filename" value="${user.name}.properties"/>
    <property file="config/${config.filename}"/>
    <property file="../build.properties"/>

    <property name="runtime.environment" value="development"/>

    <target name="jetty-demo">
        <delete dir="war/WEB-INF/lib"/>
        <artifact:mvn mavenHome="${maven.home}" fork="true" >
            <jvmarg value="-Xmx1024M" />
            <jvmarg value="-Xdebug" />
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8003" />
            <jvmarg value="-javaagent:${spring.instrument.path}" />
            <jvmarg value="-Druntime.environment=${runtime.environment}" />
            <arg value="compile"/>
            <arg value="war:exploded"/>
            <arg value="jetty:run"/>
        </artifact:mvn>
    </target>

    <target name="jetty-demo-jrebel">
        <delete dir="war/WEB-INF/lib"/>
        <artifact:mvn mavenHome="${maven.home}" fork="true">
            <jvmarg value="-Xmx1024M" />
            <jvmarg value="-Xdebug" />
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8003,server=y,suspend=n" />
            <jvmarg value="-Xbootclasspath/p:%temp%//rebelboot.jar" />
            <jvmarg value="-Drebel.root=${project.root}" />
            <jvmarg value="-Dlogs.dir=${logs.dir}" />
            <!--<jvmarg value="-Dusehsql=true" />-->
            <jvmarg value="-noverify" />
            <jvmarg value="-agentpath:${jrebel.agent.path}" />
            <!--          <jvmarg value="-javaagent:${jrebel.path}" />  -->
            <jvmarg value="-javaagent:${spring.instrument.path}" />
            <jvmarg value="-Druntime.environment=${runtime.environment}" />
            <arg value="compile"/>
            <arg value="war:exploded"/>
            <arg value="jetty:run"/>
        </artifact:mvn>
    </target>

    <target name="jetty-stop">
        <artifact:mvn mavenHome="${maven.home}" fork="true" >
            <jvmarg value="-XX:MaxPermSize=256M" />
            <jvmarg value="-Xmx512M" />
            <arg value="jetty:stop"/>
        </artifact:mvn>
    </target>

    <target name="jetty-restart" depends="jetty-stop, jetty-demo">
    </target>

    <target name="jetty-restart-with-build" depends="jetty-stop, build-app, jetty-demo">
    </target>

    <target name="jetty-restart-jrebel" depends="jetty-stop, jetty-demo-jrebel">
    </target>

    <target name="jetty-restart-with-build-jrebel" depends="jetty-stop, build-app, jetty-demo-jrebel">
    </target>

    <!-- Project Reference Targets -->
    <!-- build the application and create the war artifact -->
    <target name="build-app">
        <delete dir="war/WEB-INF/lib"/>
        <artifact:mvn mavenHome="${maven.home}" fork="true">
            <arg value="-Dmaven.test.skip=true"/>
            <arg value="clean"/>
            <arg value="install"/>
        </artifact:mvn>
    </target>

    <!-- Project Reference Targets -->
    <!-- build the application and create the war artifact -->
    <target name="build-framework" >
        <exec dir="../../tallyframework" executable="cmd">
            <arg line="/c mvn install"/>
        </exec>
    </target>
</project>